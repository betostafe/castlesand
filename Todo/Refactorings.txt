Internal refactorings that don't affect gameplay, but might be needed for the projects future development

	Add seperate folder for SP maps that do not go into releases (MapsTest)
		1st attempt failed. We need to add parent folder to map addressing. We can also split MapsMP by modes (MapsMPEconomy, MapsMPFight, etc)

	Tool that generates the Release folder and a Diff with new or modified files from the previous release folder

	Rework render layers so that cursor logic is in corresponding UI modules

	Switch completely to Unicode compilation? (means dropping Delphi 7)

	Smooth shadows generator for user override sprites in Sprites folder

	Redesign gameplay UI into units similar to main menu pages

	Introduce free-movement forms into MapEd interface (so we can fit more things in them)

	Rework the way wares are stored in houses, allowing to evacuate and removing segregation to In and Out

	Networking needs refactoring, maybe we can split it into common, lobby and gameplay parts

	Replace indexing of terrain and net parts from 1..N to a convenient 0..N-1

	See about adding achievements to the game
		That does not work well because we cant properly count reloaded games (add UID to each game?)

	Try out making roadfinder aware of houses it connects (to prefer relevant houses)

	Split network protocol (commands) into server-client level (queries, rooms, connecting, disconnecting) and game level (lobby, gameplay)

	Split Houses and Units into modules. 1 class = a module

	Replace ActionAbandonWalk with a flag in ActionWalkTo that will be checked once unit steps on a new tile