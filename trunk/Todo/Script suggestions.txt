Implemented:
 5777	Cover/Reveal rectangular FOW area
 5778	Actions.AIEquipRate(aPlayer: Byte; aType: Byte; aRate: Word)
 5871	Event OnHousePlanPlaced(aPlayer: Byte; aX, aY: Word; aType: Byte)
 5882	Event OnHouseDamaged(aHouse, aAttacker: Integer);
 5884	Event OnUnitWounded(aUnit, aAttacker: Integer);
 5964   Events OnPlanRoad, OnPlanField, OnPlanWinefield (aPlayer, aX, aY: Integer)
 5924   Actions.AIAutoBuild(aPlayer: Byte, aAuto: Boolean)
 5924   Actions.AIAutoDefence(aPlayer: Byte; aAuto: Boolean)
 5924   Actions.AIRecruitsDelay(aPlayer: Byte, aDelay: Cardinal)
 5924   Actions.AISerfsFactor(aPlayer, aLimit: Byte)
 5924   Actions.AIWorkersLimit(aPlayer, aLimit: Byte)
 5927   States.PlayerIsAI(aPlayer: Byte): Boolean
 5927   Actions.RemoveField(X, Y: Word)
 5927   Actions.RemoveRoad(X, Y: Word)
 5932   Actions.AIAutoRepair(aPlayer: Byte; aAuto: Boolean)
 5932   Actions.AISoldiersLimit(aPlayer: Byte; aLimit: Integer)
 5932   Actions.AIDefensePositionAdd(aPlayer: Byte; X: Integer; Y: Integer; aDir: Byte; aGroupType: Byte; aRadius: Word; aDefType: Byte) 
 5932   States.GroupType(aGroupID: Integer) - returns type of certain group (melee, ranged...)
 5934   States.HouseCanReachResources(aHouseID: Integer): Boolean
 5934   Actions.AIGroupsFormationSet(aPlayer, aType: Byte; aCount, aColumns: Word)
 5934   Actions.GroupHungerSet(aGroupID, aHungerLevel: Integer)
 5934   Actions.GroupKillAll(aGroupID: Integer; aSilent: Boolean)
 5934   Actions.UnitBlock(aPlayer: Byte; aType: Word; aBlock: Boolean)
 5938   Actions.CinematicStart(aPlayer: Byte);
 5938   Actions.CinematicEnd(aPlayer: Byte);
 5938   Actions.CinematicPanTo(aPlayer: Byte; X, Y, Duration: Word);
 5943   States.ClosestGroup(aPlayer, X, Y: Integer): Integer
 5943   States.ClosestHouse(aPlayer, X, Y: Integer): Integer
 5943   States.ClosestUnit(aPlayer, X, Y: Integer): Integer
 5943   States.HouseOccupant(aHouseID: Integer): Integer
 5964   OnPlanRoad, OnPlanField, OnPlanWinefield
 5976   Actions.GroupDisableHungryMessage
 5978   UnitKill now works for animals
 6015   Actions.HouseTakeWaresFrom
 6067   Actions.Log
 6114   OnHouseAfterDestroyed, OnUnitAfterDied


Accepted:
	Change house/unit/group owner
	Allow to query count of placed house plans
	DisplayText(text, player_id, timeout) to show announcements that will be gone after timeout (for TD and etc.)
	Split a specific warrior out of a group
	Looping option for PlayWAV (useful for ambient sounds at a location)


Proposed:
	Change position/alignment/font of overlay text
	Render sprite onto map (from provided RXX file)
	Render sprite overlaid on the screen like TKMImage (from provided RXX file)
	Change which player MySpectator is viewing/controlling
	Block player from moving the viewport or selecting anything (cutscene mode)
	Select unit/house/group in the player's UI
	DelayedExecution(delay, function, params)
	Forbidden areas where players can't move their troops
	Way to add/remove recruits directly from barracks
	ChangeMapTile
	States.HousePlanAt(X, Y) - returns aPlanID.
	More options for on-screen text (background color, alignment, font, size, etc.)
	HousePlanType(aPlanID), returns the type of the house plan.
	States.GroupAtDefPos(PlayerID, PositionID)
	Actions.RemDefensePosition(PlayerID, PositionID)
	Allow high volume boost for positional script sounds (currently limited to 1.0) since they are much quieter than non-positional sounds
	Add flag to allow to kill units with death animation, but without sound

	Actions.AI_enable(PlayerID; Enable:Boolean); //Auto-feed, etc
	Actions.AI_startAttack(PlayerID, TargetX, TargetY, ArmyCount, MeleeGroups, AntihorseGroups, RangedGroups, MountedGroups); 
	States.AI_closestEnemyUnit(PlayerID):Integer; 
	States.AI_closestEnemyHouse(PlayerID):Integer 
	States.Path_getLength(fromX, fromY, toX, toY):Integer; 
	States.Path_closestUnit(X, Y):Integer; 
	States.Path_closestHouse(X, Y):Integer; 
	OnGroupHungry(aGroupID); 
        Change player color
	Actions.GroupOrderAttackGroup(AttackersGroupID, GroupToAttackID: Integer)
        OnConsoleInput event
        GroupLock - Blocks player from giving orders to the group


Rejected:	
	Actions.SetAIName (Player names can be written in libx, changing names during the game sounds like inconsistency)
