var iStoreHouseTaken, iMassiveAttack, iMessageShow, iUnitKilled : Boolean;
var myStorehouse : Integer;
var importants : array[0..14] of Integer;

function PlayerCheckWin : Boolean;
var i : Integer;
var destroyed, kills : Boolean;
begin
	destroyed := true;
	kills := true;
	for i := 0 to Length(importants) - 1 do
		begin
			if (States.HouseDestroyed(importants[i]) = false) then
				begin
					destroyed := false;
					break;
				end;
		end;
	
	for i := 1 to 5 do
		begin
			if (States.StatArmyCount(i) > 0) then
				begin
					kills := false;
					break;
				end;
		end;
	
	Result := destroyed and kills;
end;

procedure OnMissionStart;
begin
	iStoreHouseTaken := false;
	iMassiveAttack := true;
	myStorehouse := States.HouseAt(49, 119);
	importants[0] := States.HouseAt(47, 40);
	importants[1] := States.HouseAt(57, 27);
	importants[2] := States.HouseAt(51, 23);
	importants[3] := States.HouseAt(47, 20);
	importants[4] := States.HouseAt(51, 19);
	importants[5] := States.HouseAt(63, 9);
	importants[6] := States.HouseAt(63, 9);
	importants[7] := States.HouseAt(55, 7);
	importants[8] := States.HouseAt(67, 9);
	importants[9] := States.HouseAt(121, 10);
	importants[10] := States.HouseAt(125, 35);
	importants[11] := States.HouseAt(117, 39);
	importants[12] := States.HouseAt(110, 44);
	importants[13] := States.HouseAt(110, 44);
	importants[14] := States.HouseAt(113, 61);
	iMessageShow := false;
	iUnitKilled := false;
end;

procedure OnHouseDestroyed(aHouseID: Integer; aDestroyerIndex: Integer);
begin 
	if (aHouseId = myStorehouse) then Actions.PlayerDefeat(0);
	if (PlayerCheckWin) then Actions.PlayerWin([0], false);
end;

function UnitsState(above : Boolean) : Integer;
var uState, i, j : Integer;
var allGroups : array of Integer;
begin
	uState := 0;
	allGroups := States.PlayerGetAllGroups(0);
	for i := 0 to Length(allGroups) - 1 do
		begin
			for j := 0 to States.GroupMemberCount(allGroups[i]) - 1 do
				begin
					if (above = true) then 
						begin if (States.UnitPositionY(States.GroupMember(allGroups[i], j)) < 80) then uState := uState + 1; end
					else 
						begin if (States.UnitPositionY(States.GroupMember(allGroups[i], j)) >= 80) then uState := uState + 1; end
				end;
		end;
	Result := uState;
end;

procedure OnUnitDied(aUnitID: Integer; aKillerIndex : Integer);
var i, j, above, below : Integer;
var allGroups : array of Integer;
begin
	if ((States.UnitOwner(aUnitID) = 0) and (aKillerIndex > 0) and (States.UnitPositionY(aUnitId) < 80)) then iMassiveAttack := false; 
	if (((States.UnitOwner(aUnitID) = 2) or (States.UnitOwner(aUnitID) = 3)) and (iMassiveAttack = false)) then 
		begin		
			above := UnitsState(true);
			below := UnitsState(false);
			if ((above < 8) and (below < 40)) then
				begin
					if (iMessageShow = false) then begin Actions.ShowMsg(0, '<$3>'); iMessageShow := true; end;
					iMassiveAttack := true;
					allGroups := States.PlayerGetAllGroups(2);
					for i := 0 to Length(allGroups) - 1 do
						Actions.GroupOrderAttackHouse(allGroups[i], myStorehouse);
						
					allGroups := States.PlayerGetAllGroups(4);
					for i := 0 to Length(allGroups) - 1 do
						Actions.GroupOrderAttackHouse(allGroups[i], myStorehouse);
				end;
		end;
	if (PlayerCheckWin) then Actions.PlayerWin([0], false);
end;

procedure ChangeOwners;
var x, d, j : Integer;
begin
	x := States.HouseAt(84, 91);
	if (x > 0) then
		begin
			d := States.HouseDamage(x);
			Actions.HouseDestroy(x, true);
			x := Actions.GiveHouse(0, 11, 84, 91);
			Actions.HouseAddDamage(x, d);
			Actions.HouseAddWaresTo(x, 4, 220);
			Actions.HouseAddWaresTo(x, 8, 21);
			Actions.HouseAddWaresTo(x, 13, 13);
			Actions.HouseAddWaresTo(x, 10, 39);
			Actions.HouseAddWaresTo(x, 27, 3);
			Actions.HouseAddWaresTo(x, 0, 7);
			Actions.HouseAddWaresTo(x, 14, 11);
			Actions.HouseAddWaresTo(x, 19, 20);
			Actions.HouseAddWaresTo(x, 25, 10);
			Actions.HouseAddWaresTo(x, 21, 10);
			Actions.HouseAddWaresTo(x, 17, 10);
		end;
end;

procedure OnTick;
begin
	if (States.GameTime = 400) then
		begin
			Actions.FogRevealCircle(0, 84, 90, 4);
			Actions.ShowMsgGoto(0, 84, 91, '<$0>');
		end;
	
	if ((States.StatArmyCount(5) = 0) and (iStoreHouseTaken = false)) then
		begin
			iStoreHouseTaken := true;
			ChangeOwners;
			Actions.ShowMsg(0, '<$1>');
		end;
	
	if (States.GameTime = 28800) then Actions.ShowMsg(0, '<$2>');
end;
