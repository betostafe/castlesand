#summary Mission scripts
#labels Featured

= Mission scripts =

Missions can be easily extended with custom scripts to add special events to them. Each missions script is located in `\Maps\map_name\map_name.script` file, which can be opened in any plain text editor (e.g. Notepad). Scripts are written in PascalScript language (syntax is very similar to usual Pascal).

Script has 3 ways of interacting with the game - *Events*, *States* and *Actions*. Events get called by the game when they happen. States are values that can be querried from the game. Actions are way to tell the game what to do.

Script file consists of several parts:

{{{//Global variables section, accessible from any place in the script and stored in game memory
var
  I: Integer; //variable number
  A: array [0..3] of Boolean; //array of 4 booleans accessible as A[0], A[1] etc.

//Event handler, when the event happens ingame this function gets called
procedure OnHouseBuilt(..); //Ecah event has different input parameters list
var //Local variables, they exist only within this procedure
  L: Integer; //variable number 
begin
  //Event code
  L := 7; //assignment of number to a variable
  Actions.ShowMsg(0,L); //Calling a games action with 2 parameters: 0 and L
end;

//Main section which gets executed each game tick
begin
  //Code here
  if States.GameTime = 60 then //Check game time and show a message
    Actions.ShowMsg(0,3);
end.
}}}

Here is Battle Tutorial script explained:

{{{procedure OnPlayerDefeated(aIndex: Integer);
begin
  if aIndex = 2 then Actions.ShowMsg(0, 2);
  if aIndex = 3 then Actions.ShowMsg(0, 3);
  if aIndex = 4 then Actions.ShowMsg(0, 4);
end;

begin
  if States.GameTime = 20 then 
    Actions.ShowMsg(0, 1);
end.}}}

Above line means that when PlayerDefeated event comes from the game, we check the index of the player that was defeated (aIndex) and issue a command to show certain message to specified player (0, who is human). Also, each tick we check the games time and on tick 20 we show another message.



==Events==

|| Event || Description || Parameter 1 || Parameter 2 ||
|| ~~ATTACK_REPELLED~~ || Player has repelled the scripted attack || 1. Attack index || - ||
|| *DEFEATED* || Occurs when certain player has been defeated. Defeat conditions are checked separately by Player AI || - || - ||
|| *HOUSE_BUILT* || Occurs when player has built the specified house type || 1. House type index || - ||
|| *TIME* || Occurs when specified time has come || 1. Time value in game ticks (100ms by default) || - ||
|| _UNIT_COUNT_ || Player has specified count of alive citizens || 1. Unit type || 2. Count ||
|| _UNITS_LOST_ || Player has lost specified count of units (citizens and warriors) || 1. Count || - ||
|| _WARES_COUNT_ || Player has total of specified amount of wares || 1. Ware type || 2. Count ||

`*`triggers typed in _italic_ are not yet implemented.
`**`triggers typed in ~~crossed out~~ are planned to be rejected.

==Available actions==

|| Action || Description || Parameter 1 || Parameter 2 || Parameter 3 || Parameter 4 ||
|| _ALLIANCE_CHANGE_ || Change the alliance setting between specified players || 1. Target player index || - || - ||
|| ~~ATTACK~~ || Issue attack order to AI || 1. Target player index || 2. Other attack parameters ... ? || - ||
|| ~~ATTACK_WAVE~~ || Spawn group of warriors and set their attack goal || 1. Spawn location X, Y || 2. Other parameters ... ? || - ||
|| *DELAYED_MESSAGE* || Displays a message after specified delay || 1. Delay amount in game ticks || 2. Message index || - ||
|| *GIVE_UNITS* || Give specified player more units || 1. Unit type || 2. Location X || 3. Location Y || 4. Count ||
|| *GIVE_WARES* || Adds amount of ware to oldest players Store || 1. Ware type || 2. Count || - ||
|| _SEND_WARES_ || Take amount of ware from one player and give them to another players Store || 1. Ware type || 2. Count || 3. Receiver player index ||
|| _SHOW_COUNTDOWN_ || Display countdown for player || 1. Value to count from || - || - ||
|| *SHOW_MESSAGE* || Displays a message immediately || 1. Message index || - || - ||
|| *UNLOCK_HOUSE* || Explicitly allow player to build houses of specified type || 1. House type || - || - ||
|| *VICTORY* || Proclaims victory to the player || - || - || - ||

`*`actions typed in _italic_ are not yet implemented.
`**`actions typed in ~~crossed out~~ are planned to be rejected.

==Examples==

TIME -1 600 SHOW_MESSAGE 0 1 //After 1 minute show text message #1 to Player0

DEFEATED 1 DELAYED_MESSAGE 0 50 2 //After Player1 gets defeated wait 5sec and show message #2 to Player0