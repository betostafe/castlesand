//Script by Randziu/Random Lyrics
const
PLAYER = 0;
ALLY = 5;
MAX_PLAYERS = 1;

// CHANGEABLE
MUSIC_VOLUME = 1.0;
SECOND_MESSAGE_ATIME = 180; //seconds
WARES_SEND_TIME = 60; //seconds
STONE_REQUEST = 20;
WARES_COUNT = 5;
WEAPONS_COUNT = 3;
FOG_RADIUS = 12;

var
CARAVAN_GROUPS: array of integer;
QUEST_NUMBER: integer;
SECOND_MESSAGE_COUNTER: integer;
WARES_SEND_COUNTER, WARES_SEND_COUNT, WARES_SEND_TYPE: integer;
WARES_SEND_ENABLED, WARES_SEND_WEAPONS: boolean;
MARKETPLACE: integer;
STONE_ENABLED: boolean;

//GLOBAL FUNCTIONS
function Sqr(A: integer): integer;
begin
	result:= ( A*A );
end;
procedure Test(a: integer);
begin
	Actions.ShowMsg(-1, 'test: ' + inttostr(a));
end;
function InRange(aInt, aFrom, aTo: integer): boolean;
begin
	Result := (aInt >= aFrom) and (aInt <= aTo);
end;

// MECHANICS
procedure SecondMessage;
begin
	if SECOND_MESSAGE_COUNTER > 0 then begin
		SECOND_MESSAGE_COUNTER:= SECOND_MESSAGE_COUNTER - 1;
		if SECOND_MESSAGE_COUNTER <= 0 then begin
			Actions.ShowMsg(PLAYER, '<$1>');
			Actions.FogRevealRect(PLAYER, 6, 55, 33, 70);
			Actions.FogRevealRect(PLAYER, 82, 52, 110, 68);
			Actions.FogRevealCircle(PLAYER, 20, 79, FOG_RADIUS);
			Actions.FogRevealCircle(PLAYER, 24, 93, FOG_RADIUS);
			Actions.FogRevealCircle(PLAYER, 27, 109, FOG_RADIUS);
			Actions.GroupOrderWalk(Actions.GiveGroup(PLAYER, 21, 39, 120, 3, 2, 2), 53, 140, 0);
			Actions.FogRevealCircle(PLAYER, 92, 73, FOG_RADIUS);
			Actions.FogRevealCircle(PLAYER, 74, 81, FOG_RADIUS);
			Actions.FogRevealCircle(PLAYER, 60, 91, FOG_RADIUS);
			Actions.FogRevealCircle(PLAYER, 45, 99, FOG_RADIUS);
			Actions.FogRevealCircle(PLAYER, 33, 108, FOG_RADIUS);
		end;
	end;
end;

// STONE REQUEST
function UnitInRadius(aPlayer, X, Y, radius: integer): integer;
var 
kX, kY, u: integer;
begin
	result:= -1;
	if InRange(X, 1+radius, 95-radius) and InRange(Y, 1+radius, 95-radius) then begin
		for kX:= ( X - radius ) to ( X + radius ) do begin
			for kY:= ( Y - radius ) to ( Y + radius ) do begin
				if ( Sqr( X - kX) + Sqr( Y - kY)) <= Sqr(radius) then begin
					u:= States.UnitAt(kX, kY);
					if ( u > 0 ) and (States.UnitOwner(u) = aPlayer) then begin
						result:= u;
						exit;
					end;
				end;
			end;
		end;
	end;
end;
procedure StoneRequest;
var u: integer;
begin
	if STONE_ENABLED then begin
		u:= States.UnitAt(116, 145);
		if ( u > 0 ) and ( States.UnitOwner(u) = PLAYER ) then begin
			if States.HouseResourceAmount(States.HouseAt(59, 149), 1) >= 20 then begin
				STONE_ENABLED:= false;
				if not WARES_SEND_ENABLED then
					Actions.ShowMsg(PLAYER, '<$9>')
				else
					Actions.ShowMsg(PLAYER, '<$2>');
				Actions.GiveWares(ALLY, 1, STONE_REQUEST);
				Actions.PlanConnectRoad(ALLY, 103, 142, 109, 140, false);
				Actions.GiveUnit(ALLY, 9, 111, 139, 4);
				Actions.HouseTakeWaresFrom(States.HouseAt(59, 149), 1, STONE_REQUEST);
			end;
		end;
	end;
end;
// SEND WARES
procedure SendWares;
begin
 if ( MARKETPLACE > 0 ) and ( States.HouseDestroyed(MARKETPLACE) = false ) then begin
	Actions.HouseDeliveryBlock(MARKETPLACE, true);
	if WARES_SEND_ENABLED and not STONE_ENABLED then begin
		WARES_SEND_COUNTER:= WARES_SEND_COUNTER - 1;
		if WARES_SEND_COUNTER <= 0 then begin
			if WARES_SEND_WEAPONS then begin
				WARES_SEND_COUNT:= WEAPONS_COUNT + States.KamRandomI(2);
				WARES_SEND_TYPE:= 16 + States.KamRandomI(11);
				WARES_SEND_WEAPONS:= false;
			end else begin
				WARES_SEND_COUNT:= WARES_COUNT + States.KamRandomI(2);
				WARES_SEND_TYPE:= 2 + States.KamRandomI(13);
				WARES_SEND_WEAPONS:= true;
			end;
			Actions.HouseAddWaresTo(MARKETPLACE, WARES_SEND_TYPE, WARES_SEND_COUNT);
			//Actions.GiveWares(PLAYER, WARES_SEND_TYPE, WARES_SEND_COUNT);
			WARES_SEND_COUNTER:= WARES_SEND_TIME;
		end;
	end;
 end;
end;

//VICTORY CONDITIONS
function EnemyDefeated: boolean;
var j, p: integer;
begin
	p:= 0;
	for j:= 1 to 4 do begin
		if ( States.StatHouseTypeCount(j, 11) <= 0 ) and ( States.StatHouseTypeCount(j, 13) <= 0 ) and ( States.StatHouseTypeCount(j, 21) <= 0 ) then
			p:= p + 1;
	end;
	result:= p = 4;
end;
// SCORE - LABELS
procedure ShowMissionObjectives(aPlayer: integer);
begin
	Actions.OverlayTextSetFormatted(aPlayer, '<$4>', []);
	if QUEST_NUMBER = 1 then begin
		Actions.OverlayTextAppendFormatted(aPlayer, '<$6>', []);
		Actions.OverlayTextAppend(aPlayer, '|');
	end;
	if WARES_SEND_ENABLED and not STONE_ENABLED then begin
		if InRange(WARES_SEND_COUNTER, WARES_SEND_TIME-15, WARES_SEND_TIME) then
			Actions.OverlayTextAppendFormatted(aPlayer, '<$8>', [WARES_SEND_COUNT, States.WareTypeName(WARES_SEND_TYPE)])
		else
			Actions.OverlayTextAppendFormatted(aPlayer, '<$7>', [WARES_SEND_COUNTER]);
		Actions.OverlayTextAppend(aPlayer, '|');
	end;
end;

// GLOBAL EVENTS
procedure OnHouseBuilt(aHouse: integer);
begin
	if States.HouseType(aHouse) = 29 then begin
		MARKETPLACE:= aHouse;
		WARES_SEND_ENABLED:= true;
		WARES_SEND_COUNTER:= 45;
		if not STONE_ENABLED then
			Actions.ShowMsg(PLAYER, '<$2>')
		else
			Actions.ShowMsgFormatted(PLAYER, '<$10>', [STONE_REQUEST]);
	end;
end;
procedure OnHousePlanPlaced(aPlayer, X, Y, aType: integer);
begin
	if aType = 29 then begin
		Actions.HouseAllow(PLAYER, 29, false);
	end;
end;
procedure OnHousePlanRemoved(aPlayer, X, Y, aType: integer);
begin
	if aType = 29 then begin
		Actions.HouseAllow(PLAYER, 29, true);
	end;
end;
procedure OnHouseDestroyed(aHouse, aDestroyerIndex: integer);
begin
	if EnemyDefeated then
		Actions.PlayerWin([PLAYER], true);
	if States.HouseType(aHouse) = 29 then begin
		Actions.HouseAllow(PLAYER, 29, true);
		Actions.ShowMsg(PLAYER, '<$3>');
		WARES_SEND_ENABLED:= false;
	end;
end;
procedure OnUnitDied(aUnitID, aKillerIndex: integer);
begin

end;
//								ON TICK
procedure OnTick;
begin
	if ( States.GameTime mod 10 = 0 ) then begin
		StoneRequest;
		SendWares;
		ShowMissionObjectives(PLAYER);
		SecondMessage;
	end;
end;
// 								ON MISSION START
procedure OnMissionStart;
begin
	QUEST_NUMBER:= 1;
	SECOND_MESSAGE_COUNTER:= SECOND_MESSAGE_ATIME;
	WARES_SEND_COUNTER:= 0;
	WARES_SEND_ENABLED:= false;
	Actions.HouseUnlock(PLAYER, 29);
	Actions.HouseAllow(PLAYER, 29, true);
	STONE_ENABLED:= true;
	Actions.ShowMsgFormatted(PLAYER, '<$0>', [STONE_REQUEST]);
end;